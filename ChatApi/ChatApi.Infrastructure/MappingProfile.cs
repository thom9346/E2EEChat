using AutoMapper;
using ChatApi.Core.DTOs;
using ChatApi.Core.Entities;

public class MappingProfile : Profile
{
    public MappingProfile()
    {
        CreateMap<User, UserDto>()
            .ForMember(dest => dest.Password, opt => opt.Ignore()); // Ignore password in mapping
        CreateMap<UserDto, User>()
            .ForMember(dest => dest.PasswordHash, opt => opt.Ignore()); // Ignore password hash in mapping

        CreateMap<Message, MessageDto>().ReverseMap();

        CreateMap<RegisterDto, User>()
            .ForMember(dest => dest.PasswordHash, opt => opt.Ignore()) // Password hash will be handled separately
            .ForMember(dest => dest.UserId, opt => opt.Ignore()) // UserId will be generated by the database
            .ForMember(dest => dest.SigningPublicKey, opt => opt.MapFrom(src => src.SigningPublicKey)); // Map SigningPublicKey

        CreateMap<LoginDto, User>()
            .ForMember(dest => dest.PasswordHash, opt => opt.Ignore()) // Password hash will be handled separately
            .ForMember(dest => dest.UserId, opt => opt.Ignore()) // UserId will be handled separately
            .ForMember(dest => dest.Email, opt => opt.Ignore()); // Email will be handled separately

        CreateMap<Friendship, FriendshipDto>().ReverseMap();
    }
}
